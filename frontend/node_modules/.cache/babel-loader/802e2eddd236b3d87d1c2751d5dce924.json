{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Idokoken\\\\Desktop\\\\ict_exercise\\\\projects\\\\fullstack\\\\fullstack-blogapp\\\\frontend\\\\src\\\\contents\\\\SinglePost.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useContext } from \"react\";\nimport axios from \"axios\";\nimport { NavLink, useParams } from \"react-router-dom\";\nimport \"./singlepost.css\";\nimport { Context } from \"../context/Context\";\n\nfunction SinglePost() {\n  _s();\n\n  const {\n    id\n  } = useParams(); //const path = useLocation().pathname.split(\"/\")[2];\n\n  const [post, setPost] = useState([]);\n  const {\n    user\n  } = useContext(Context);\n  const [title, setTitle] = useState(\"\");\n  const [desc, setDesc] = useState(\"\");\n  const [updateMode, setUpdateMode] = useState(false);\n  useEffect(() => {\n    const getpost = async () => {\n      try {\n        const res = await axios.get(`/post/${id}`);\n        setPost(res.data);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    getpost();\n  }, [id]);\n  const Pf = \"http://localhost:8000/images/\";\n\n  const handleDelete = async () => {\n    try {\n      await axios.delete(`/post/${post._id}`, {\n        data: {\n          username: user.username\n        }\n      });\n      window.location.replace(\"/\");\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"singlepost\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrapper\",\n      children: [post.photo && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: Pf + post.photo,\n        alt: \"post cover\",\n        className: \"singlepostimage\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), updateMode ? /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"singlepostitle\",\n        children: [post.title, post.username === (user === null || user === void 0 ? void 0 : user.username) && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"edit\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"\",\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fa-solid fa-pen-to-square editIcon\",\n              onClick: () => setUpdateMode(true)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"\",\n            onClick: () => console.log(\"hello\"),\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fa-solid fa-trash-can editIcon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"singlepostinfo\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: /*#__PURE__*/_jsxDEV(NavLink, {\n            to: `/?user=${post.username}`,\n            children: [\" \", \"Authur: \", /*#__PURE__*/_jsxDEV(\"b\", {\n              children: post.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: new Date(post.createdAt).toDateString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"singlepostdesc\",\n        children: post.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SinglePost, \"7vhyzn5WK+cBRYkyGq2ErvpUlZk=\", false, function () {\n  return [useParams];\n});\n\n_c = SinglePost;\nexport default SinglePost;\n\nvar _c;\n\n$RefreshReg$(_c, \"SinglePost\");","map":{"version":3,"sources":["C:/Users/Idokoken/Desktop/ict_exercise/projects/fullstack/fullstack-blogapp/frontend/src/contents/SinglePost.js"],"names":["React","useEffect","useState","useContext","axios","NavLink","useParams","Context","SinglePost","id","post","setPost","user","title","setTitle","desc","setDesc","updateMode","setUpdateMode","getpost","res","get","data","error","console","log","Pf","handleDelete","delete","_id","username","window","location","replace","photo","Date","createdAt","toDateString","description"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\nimport axios from \"axios\";\nimport { NavLink, useParams } from \"react-router-dom\";\nimport \"./singlepost.css\";\nimport { Context } from \"../context/Context\";\n\nfunction SinglePost() {\n  const { id } = useParams();\n\n  //const path = useLocation().pathname.split(\"/\")[2];\n\n  const [post, setPost] = useState([]);\n  const { user } = useContext(Context);\n  const [title, setTitle] = useState(\"\");\n  const [desc, setDesc] = useState(\"\");\n  const [updateMode, setUpdateMode] = useState(false);\n\n  useEffect(() => {\n    const getpost = async () => {\n      try {\n        const res = await axios.get(`/post/${id}`);\n        setPost(res.data);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    getpost();\n  }, [id]);\n  const Pf = \"http://localhost:8000/images/\";\n\n  const handleDelete = async () => {\n    try {\n      await axios.delete(`/post/${post._id}`, {\n        data: { username: user.username },\n      });\n      window.location.replace(\"/\");\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <div className=\"singlepost\">\n      <div className=\"wrapper\">\n        {post.photo && (\n          <img\n            src={Pf + post.photo}\n            alt=\"post cover\"\n            className=\"singlepostimage\"\n          />\n        )}\n        {updateMode ? (\n          <input type=\"text\" value={post.title} />\n        ) : (\n          <h1 className=\"singlepostitle\">\n            {post.title}\n            {post.username === user?.username && (\n              <div className=\"edit\">\n                <div className=\"\">\n                  <i\n                    className=\"fa-solid fa-pen-to-square editIcon\"\n                    onClick={() => setUpdateMode(true)}\n                  ></i>\n                </div>\n                <div className=\"\" onClick={() => console.log(\"hello\")}>\n                  <i className=\"fa-solid fa-trash-can editIcon\"></i>\n                </div>\n              </div>\n            )}\n          </h1>\n        )}\n\n        <div className=\"singlepostinfo\">\n          <span>\n            <NavLink to={`/?user=${post.username}`}>\n              {\" \"}\n              Authur: <b>{post.username}</b>\n            </NavLink>\n          </span>\n          <span>{new Date(post.createdAt).toDateString()}</span>\n        </div>\n        <p className=\"singlepostdesc\">{post.description}</p>\n      </div>\n    </div>\n  );\n}\n\nexport default SinglePost;\n"]},"metadata":{},"sourceType":"module"}