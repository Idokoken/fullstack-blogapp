{"ast":null,"code":"/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n/**\n * Total number of Polymer element instances created.\n * @type {number}\n */\nexport let instanceCount = 0;\nexport function incrementInstanceCount() {\n  instanceCount++;\n}\n/**\n * Array of Polymer element classes that have been finalized.\n * @type {!Array<!PolymerElementConstructor>}\n */\n\nexport const registrations = [];\n/**\n * @param {!PolymerElementConstructor} prototype Element prototype to log\n * @private\n */\n\nfunction _regLog(prototype) {\n  console.log('[' +\n  /** @type {?} */\n  prototype.is + ']: registered');\n}\n/**\n * Registers a class prototype for telemetry purposes.\n * @param {!PolymerElementConstructor} prototype Element prototype to register\n * @protected\n */\n\n\nexport function register(prototype) {\n  registrations.push(prototype);\n}\n/**\n * Logs all elements registered with an `is` to the console.\n * @public\n */\n\nexport function dumpRegistrations() {\n  registrations.forEach(_regLog);\n}","map":{"version":3,"sources":["/storage/emulated/0/ict-folder/react-app/frontend/node_modules/@polymer/polymer/lib/utils/telemetry.js"],"names":["instanceCount","incrementInstanceCount","registrations","_regLog","prototype","console","log","is","register","push","dumpRegistrations","forEach"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO,IAAIA,aAAa,GAAG,CAApB;AAEP,OAAO,SAASC,sBAAT,GAAkC;AACvCD,EAAAA,aAAa;AACd;AAED;AACA;AACA;AACA;;AACA,OAAO,MAAME,aAAa,GAAG,EAAtB;AAEP;AACA;AACA;AACA;;AACA,SAASC,OAAT,CAAiBC,SAAjB,EAA4B;AAC1BC,EAAAA,OAAO,CAACC,GAAR,CAAY;AAAM;AAAiBF,EAAAA,SAAD,CAAYG,EAAlC,GAAuC,eAAnD;AACD;AAED;AACA;AACA;AACA;AACA;;;AACA,OAAO,SAASC,QAAT,CAAkBJ,SAAlB,EAA6B;AAClCF,EAAAA,aAAa,CAACO,IAAd,CAAmBL,SAAnB;AACD;AAED;AACA;AACA;AACA;;AACA,OAAO,SAASM,iBAAT,GAA6B;AAClCR,EAAAA,aAAa,CAACS,OAAd,CAAsBR,OAAtB;AACD","sourcesContent":["/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n/**\n * Total number of Polymer element instances created.\n * @type {number}\n */\nexport let instanceCount = 0;\n\nexport function incrementInstanceCount() {\n  instanceCount++;\n}\n\n/**\n * Array of Polymer element classes that have been finalized.\n * @type {!Array<!PolymerElementConstructor>}\n */\nexport const registrations = [];\n\n/**\n * @param {!PolymerElementConstructor} prototype Element prototype to log\n * @private\n */\nfunction _regLog(prototype) {\n  console.log('[' + /** @type {?} */(prototype).is + ']: registered');\n}\n\n/**\n * Registers a class prototype for telemetry purposes.\n * @param {!PolymerElementConstructor} prototype Element prototype to register\n * @protected\n */\nexport function register(prototype) {\n  registrations.push(prototype);\n}\n\n/**\n * Logs all elements registered with an `is` to the console.\n * @public\n */\nexport function dumpRegistrations() {\n  registrations.forEach(_regLog);\n}"]},"metadata":{},"sourceType":"module"}